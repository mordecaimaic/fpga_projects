|seg_test
clk => clk.IN9
rst_n => rst_n.IN7
led[0] << led[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
led[1] << led[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
led[2] << led[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
led[3] << led[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key1 => key1.IN1
key_3 => key_3.IN1
seg_sel[0] << seg_scan:seg_scan_m0.seg_sel
seg_sel[1] << seg_scan:seg_scan_m0.seg_sel
seg_sel[2] << seg_scan:seg_scan_m0.seg_sel
seg_sel[3] << seg_scan:seg_scan_m0.seg_sel
seg_sel[4] << seg_scan:seg_scan_m0.seg_sel
seg_sel[5] << seg_scan:seg_scan_m0.seg_sel
seg_data[0] << seg_scan:seg_scan_m0.seg_data
seg_data[1] << seg_scan:seg_scan_m0.seg_data
seg_data[2] << seg_scan:seg_scan_m0.seg_data
seg_data[3] << seg_scan:seg_scan_m0.seg_data
seg_data[4] << seg_scan:seg_scan_m0.seg_data
seg_data[5] << seg_scan:seg_scan_m0.seg_data
seg_data[6] << seg_scan:seg_scan_m0.seg_data
seg_data[7] << seg_scan:seg_scan_m0.seg_data


|seg_test|ax_debounce:ax_debounce_m0
clk => button_negedge~reg0.CLK
clk => button_posedge~reg0.CLK
clk => button_out_d0.CLK
clk => button_out~reg0.CLK
clk => q_reg[0].CLK
clk => q_reg[1].CLK
clk => q_reg[2].CLK
clk => q_reg[3].CLK
clk => q_reg[4].CLK
clk => q_reg[5].CLK
clk => q_reg[6].CLK
clk => q_reg[7].CLK
clk => q_reg[8].CLK
clk => q_reg[9].CLK
clk => q_reg[10].CLK
clk => q_reg[11].CLK
clk => q_reg[12].CLK
clk => q_reg[13].CLK
clk => q_reg[14].CLK
clk => q_reg[15].CLK
clk => q_reg[16].CLK
clk => q_reg[17].CLK
clk => q_reg[18].CLK
clk => q_reg[19].CLK
clk => q_reg[20].CLK
clk => q_reg[21].CLK
clk => q_reg[22].CLK
clk => q_reg[23].CLK
clk => q_reg[24].CLK
clk => q_reg[25].CLK
clk => q_reg[26].CLK
clk => q_reg[27].CLK
clk => q_reg[28].CLK
clk => q_reg[29].CLK
clk => q_reg[30].CLK
clk => q_reg[31].CLK
clk => DFF2.CLK
clk => DFF1.CLK
rst => button_negedge~reg0.ACLR
rst => button_posedge~reg0.ACLR
rst => button_out_d0.PRESET
rst => button_out~reg0.PRESET
rst => q_reg[0].ACLR
rst => q_reg[1].ACLR
rst => q_reg[2].ACLR
rst => q_reg[3].ACLR
rst => q_reg[4].ACLR
rst => q_reg[5].ACLR
rst => q_reg[6].ACLR
rst => q_reg[7].ACLR
rst => q_reg[8].ACLR
rst => q_reg[9].ACLR
rst => q_reg[10].ACLR
rst => q_reg[11].ACLR
rst => q_reg[12].ACLR
rst => q_reg[13].ACLR
rst => q_reg[14].ACLR
rst => q_reg[15].ACLR
rst => q_reg[16].ACLR
rst => q_reg[17].ACLR
rst => q_reg[18].ACLR
rst => q_reg[19].ACLR
rst => q_reg[20].ACLR
rst => q_reg[21].ACLR
rst => q_reg[22].ACLR
rst => q_reg[23].ACLR
rst => q_reg[24].ACLR
rst => q_reg[25].ACLR
rst => q_reg[26].ACLR
rst => q_reg[27].ACLR
rst => q_reg[28].ACLR
rst => q_reg[29].ACLR
rst => q_reg[30].ACLR
rst => q_reg[31].ACLR
rst => DFF2.ACLR
rst => DFF1.ACLR
button_in => DFF1.DATAIN
button_posedge <= button_posedge~reg0.DB_MAX_OUTPUT_PORT_TYPE
button_negedge <= button_negedge~reg0.DB_MAX_OUTPUT_PORT_TYPE
button_out <= button_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|seg_test|ax_debounce:ax_debounce_m1
clk => button_negedge~reg0.CLK
clk => button_posedge~reg0.CLK
clk => button_out_d0.CLK
clk => button_out~reg0.CLK
clk => q_reg[0].CLK
clk => q_reg[1].CLK
clk => q_reg[2].CLK
clk => q_reg[3].CLK
clk => q_reg[4].CLK
clk => q_reg[5].CLK
clk => q_reg[6].CLK
clk => q_reg[7].CLK
clk => q_reg[8].CLK
clk => q_reg[9].CLK
clk => q_reg[10].CLK
clk => q_reg[11].CLK
clk => q_reg[12].CLK
clk => q_reg[13].CLK
clk => q_reg[14].CLK
clk => q_reg[15].CLK
clk => q_reg[16].CLK
clk => q_reg[17].CLK
clk => q_reg[18].CLK
clk => q_reg[19].CLK
clk => q_reg[20].CLK
clk => q_reg[21].CLK
clk => q_reg[22].CLK
clk => q_reg[23].CLK
clk => q_reg[24].CLK
clk => q_reg[25].CLK
clk => q_reg[26].CLK
clk => q_reg[27].CLK
clk => q_reg[28].CLK
clk => q_reg[29].CLK
clk => q_reg[30].CLK
clk => q_reg[31].CLK
clk => DFF2.CLK
clk => DFF1.CLK
rst => button_negedge~reg0.ACLR
rst => button_posedge~reg0.ACLR
rst => button_out_d0.PRESET
rst => button_out~reg0.PRESET
rst => q_reg[0].ACLR
rst => q_reg[1].ACLR
rst => q_reg[2].ACLR
rst => q_reg[3].ACLR
rst => q_reg[4].ACLR
rst => q_reg[5].ACLR
rst => q_reg[6].ACLR
rst => q_reg[7].ACLR
rst => q_reg[8].ACLR
rst => q_reg[9].ACLR
rst => q_reg[10].ACLR
rst => q_reg[11].ACLR
rst => q_reg[12].ACLR
rst => q_reg[13].ACLR
rst => q_reg[14].ACLR
rst => q_reg[15].ACLR
rst => q_reg[16].ACLR
rst => q_reg[17].ACLR
rst => q_reg[18].ACLR
rst => q_reg[19].ACLR
rst => q_reg[20].ACLR
rst => q_reg[21].ACLR
rst => q_reg[22].ACLR
rst => q_reg[23].ACLR
rst => q_reg[24].ACLR
rst => q_reg[25].ACLR
rst => q_reg[26].ACLR
rst => q_reg[27].ACLR
rst => q_reg[28].ACLR
rst => q_reg[29].ACLR
rst => q_reg[30].ACLR
rst => q_reg[31].ACLR
rst => DFF2.ACLR
rst => DFF1.ACLR
button_in => DFF1.DATAIN
button_posedge <= button_posedge~reg0.DB_MAX_OUTPUT_PORT_TYPE
button_negedge <= button_negedge~reg0.DB_MAX_OUTPUT_PORT_TYPE
button_out <= button_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|seg_test|count_m10:count10_m0
clk => t~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
rst_n => t~reg0.ACLR
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
en => t.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => t.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|seg_test|count_m10:count10_m1
clk => t~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
rst_n => t~reg0.ACLR
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
en => t.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => t.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|seg_test|count_m10:count10_m2
clk => t~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
rst_n => t~reg0.ACLR
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
en => t.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => t.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|seg_test|count_m10:count10_m3
clk => t~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
rst_n => t~reg0.ACLR
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
en => t.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => t.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|seg_test|count_m10:count10_m4
clk => t~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
rst_n => t~reg0.ACLR
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
en => t.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => t.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|seg_test|count_m10:count10_m5
clk => t~reg0.CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
rst_n => t~reg0.ACLR
rst_n => data[0]~reg0.ACLR
rst_n => data[1]~reg0.ACLR
rst_n => data[2]~reg0.ACLR
rst_n => data[3]~reg0.ACLR
en => t.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
en => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => data.OUTPUTSELECT
clr => t.OUTPUTSELECT
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t <= t~reg0.DB_MAX_OUTPUT_PORT_TYPE


|seg_test|seg_decoder:seg_decoder_m0
bin_data[0] => Decoder0.IN3
bin_data[1] => Decoder0.IN2
bin_data[2] => Decoder0.IN1
bin_data[3] => Decoder0.IN0
seg_data[0] <= seg_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
enable => seg_data[1]$latch.LATCH_ENABLE
enable => seg_data[0]$latch.LATCH_ENABLE
enable => seg_data[2]$latch.LATCH_ENABLE
enable => seg_data[3]$latch.LATCH_ENABLE
enable => seg_data[4]$latch.LATCH_ENABLE
enable => seg_data[5]$latch.LATCH_ENABLE
enable => seg_data[6]$latch.LATCH_ENABLE


|seg_test|seg_decoder:seg_decoder_m1
bin_data[0] => Decoder0.IN3
bin_data[1] => Decoder0.IN2
bin_data[2] => Decoder0.IN1
bin_data[3] => Decoder0.IN0
seg_data[0] <= seg_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
enable => seg_data[1]$latch.LATCH_ENABLE
enable => seg_data[0]$latch.LATCH_ENABLE
enable => seg_data[2]$latch.LATCH_ENABLE
enable => seg_data[3]$latch.LATCH_ENABLE
enable => seg_data[4]$latch.LATCH_ENABLE
enable => seg_data[5]$latch.LATCH_ENABLE
enable => seg_data[6]$latch.LATCH_ENABLE


|seg_test|seg_decoder:seg_decoder_m2
bin_data[0] => Decoder0.IN3
bin_data[1] => Decoder0.IN2
bin_data[2] => Decoder0.IN1
bin_data[3] => Decoder0.IN0
seg_data[0] <= seg_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
enable => seg_data[1]$latch.LATCH_ENABLE
enable => seg_data[0]$latch.LATCH_ENABLE
enable => seg_data[2]$latch.LATCH_ENABLE
enable => seg_data[3]$latch.LATCH_ENABLE
enable => seg_data[4]$latch.LATCH_ENABLE
enable => seg_data[5]$latch.LATCH_ENABLE
enable => seg_data[6]$latch.LATCH_ENABLE


|seg_test|seg_decoder:seg_decoder_m3
bin_data[0] => Decoder0.IN3
bin_data[1] => Decoder0.IN2
bin_data[2] => Decoder0.IN1
bin_data[3] => Decoder0.IN0
seg_data[0] <= seg_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
enable => seg_data[1]$latch.LATCH_ENABLE
enable => seg_data[0]$latch.LATCH_ENABLE
enable => seg_data[2]$latch.LATCH_ENABLE
enable => seg_data[3]$latch.LATCH_ENABLE
enable => seg_data[4]$latch.LATCH_ENABLE
enable => seg_data[5]$latch.LATCH_ENABLE
enable => seg_data[6]$latch.LATCH_ENABLE


|seg_test|seg_decoder:seg_decoder_m4
bin_data[0] => Decoder0.IN3
bin_data[1] => Decoder0.IN2
bin_data[2] => Decoder0.IN1
bin_data[3] => Decoder0.IN0
seg_data[0] <= seg_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
enable => seg_data[1]$latch.LATCH_ENABLE
enable => seg_data[0]$latch.LATCH_ENABLE
enable => seg_data[2]$latch.LATCH_ENABLE
enable => seg_data[3]$latch.LATCH_ENABLE
enable => seg_data[4]$latch.LATCH_ENABLE
enable => seg_data[5]$latch.LATCH_ENABLE
enable => seg_data[6]$latch.LATCH_ENABLE


|seg_test|seg_decoder:seg_decoder_m5
bin_data[0] => Decoder0.IN3
bin_data[1] => Decoder0.IN2
bin_data[2] => Decoder0.IN1
bin_data[3] => Decoder0.IN0
seg_data[0] <= seg_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
enable => seg_data[1]$latch.LATCH_ENABLE
enable => seg_data[0]$latch.LATCH_ENABLE
enable => seg_data[2]$latch.LATCH_ENABLE
enable => seg_data[3]$latch.LATCH_ENABLE
enable => seg_data[4]$latch.LATCH_ENABLE
enable => seg_data[5]$latch.LATCH_ENABLE
enable => seg_data[6]$latch.LATCH_ENABLE


|seg_test|seg_scan:seg_scan_m0
clk => flag.CLK
clk => input_data[5][0].CLK
clk => input_data[5][1].CLK
clk => input_data[5][2].CLK
clk => input_data[5][3].CLK
clk => input_data[5][4].CLK
clk => input_data[5][5].CLK
clk => input_data[5][6].CLK
clk => input_data[5][7].CLK
clk => input_data[4][0].CLK
clk => input_data[4][1].CLK
clk => input_data[4][2].CLK
clk => input_data[4][3].CLK
clk => input_data[4][4].CLK
clk => input_data[4][5].CLK
clk => input_data[4][6].CLK
clk => input_data[4][7].CLK
clk => input_data[3][0].CLK
clk => input_data[3][1].CLK
clk => input_data[3][2].CLK
clk => input_data[3][3].CLK
clk => input_data[3][4].CLK
clk => input_data[3][5].CLK
clk => input_data[3][6].CLK
clk => input_data[3][7].CLK
clk => input_data[2][0].CLK
clk => input_data[2][1].CLK
clk => input_data[2][2].CLK
clk => input_data[2][3].CLK
clk => input_data[2][4].CLK
clk => input_data[2][5].CLK
clk => input_data[2][6].CLK
clk => input_data[2][7].CLK
clk => input_data[1][0].CLK
clk => input_data[1][1].CLK
clk => input_data[1][2].CLK
clk => input_data[1][3].CLK
clk => input_data[1][4].CLK
clk => input_data[1][5].CLK
clk => input_data[1][6].CLK
clk => input_data[1][7].CLK
clk => input_data[0][0].CLK
clk => input_data[0][1].CLK
clk => input_data[0][2].CLK
clk => input_data[0][3].CLK
clk => input_data[0][4].CLK
clk => input_data[0][5].CLK
clk => input_data[0][6].CLK
clk => input_data[0][7].CLK
clk => seg_data[0]~reg0.CLK
clk => seg_data[1]~reg0.CLK
clk => seg_data[2]~reg0.CLK
clk => seg_data[3]~reg0.CLK
clk => seg_data[4]~reg0.CLK
clk => seg_data[5]~reg0.CLK
clk => seg_data[6]~reg0.CLK
clk => seg_data[7]~reg0.CLK
clk => seg_sel[0]~reg0.CLK
clk => seg_sel[1]~reg0.CLK
clk => seg_sel[2]~reg0.CLK
clk => seg_sel[3]~reg0.CLK
clk => seg_sel[4]~reg0.CLK
clk => seg_sel[5]~reg0.CLK
clk => scan_sel[0].CLK
clk => scan_sel[1].CLK
clk => scan_sel[2].CLK
clk => scan_sel[3].CLK
clk => scan_timer[0].CLK
clk => scan_timer[1].CLK
clk => scan_timer[2].CLK
clk => scan_timer[3].CLK
clk => scan_timer[4].CLK
clk => scan_timer[5].CLK
clk => scan_timer[6].CLK
clk => scan_timer[7].CLK
clk => scan_timer[8].CLK
clk => scan_timer[9].CLK
clk => scan_timer[10].CLK
clk => scan_timer[11].CLK
clk => scan_timer[12].CLK
clk => scan_timer[13].CLK
clk => scan_timer[14].CLK
clk => scan_timer[15].CLK
clk => scan_timer[16].CLK
clk => scan_timer[17].CLK
clk => scan_timer[18].CLK
clk => scan_timer[19].CLK
clk => scan_timer[20].CLK
clk => scan_timer[21].CLK
clk => scan_timer[22].CLK
clk => scan_timer[23].CLK
clk => scan_timer[24].CLK
clk => scan_timer[25].CLK
clk => scan_timer[26].CLK
clk => scan_timer[27].CLK
clk => scan_timer[28].CLK
clk => scan_timer[29].CLK
clk => scan_timer[30].CLK
clk => scan_timer[31].CLK
rst_n => scan_sel[0].ACLR
rst_n => scan_sel[1].ACLR
rst_n => scan_sel[2].ACLR
rst_n => scan_sel[3].ACLR
rst_n => scan_timer[0].ACLR
rst_n => scan_timer[1].ACLR
rst_n => scan_timer[2].ACLR
rst_n => scan_timer[3].ACLR
rst_n => scan_timer[4].ACLR
rst_n => scan_timer[5].ACLR
rst_n => scan_timer[6].ACLR
rst_n => scan_timer[7].ACLR
rst_n => scan_timer[8].ACLR
rst_n => scan_timer[9].ACLR
rst_n => scan_timer[10].ACLR
rst_n => scan_timer[11].ACLR
rst_n => scan_timer[12].ACLR
rst_n => scan_timer[13].ACLR
rst_n => scan_timer[14].ACLR
rst_n => scan_timer[15].ACLR
rst_n => scan_timer[16].ACLR
rst_n => scan_timer[17].ACLR
rst_n => scan_timer[18].ACLR
rst_n => scan_timer[19].ACLR
rst_n => scan_timer[20].ACLR
rst_n => scan_timer[21].ACLR
rst_n => scan_timer[22].ACLR
rst_n => scan_timer[23].ACLR
rst_n => scan_timer[24].ACLR
rst_n => scan_timer[25].ACLR
rst_n => scan_timer[26].ACLR
rst_n => scan_timer[27].ACLR
rst_n => scan_timer[28].ACLR
rst_n => scan_timer[29].ACLR
rst_n => scan_timer[30].ACLR
rst_n => scan_timer[31].ACLR
rst_n => seg_data[0]~reg0.PRESET
rst_n => seg_data[1]~reg0.PRESET
rst_n => seg_data[2]~reg0.PRESET
rst_n => seg_data[3]~reg0.PRESET
rst_n => seg_data[4]~reg0.PRESET
rst_n => seg_data[5]~reg0.PRESET
rst_n => seg_data[6]~reg0.PRESET
rst_n => seg_data[7]~reg0.PRESET
rst_n => seg_sel[0]~reg0.PRESET
rst_n => seg_sel[1]~reg0.PRESET
rst_n => seg_sel[2]~reg0.PRESET
rst_n => seg_sel[3]~reg0.PRESET
rst_n => seg_sel[4]~reg0.PRESET
rst_n => seg_sel[5]~reg0.PRESET
seg_sel[0] <= seg_sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[1] <= seg_sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[2] <= seg_sel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[3] <= seg_sel[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[4] <= seg_sel[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_sel[5] <= seg_sel[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[0] <= seg_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[1] <= seg_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[2] <= seg_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[3] <= seg_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[4] <= seg_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[5] <= seg_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[6] <= seg_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data[7] <= seg_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_data_0[0] => input_data.DATAA
seg_data_0[0] => Equal1.IN7
seg_data_0[1] => input_data.DATAA
seg_data_0[1] => Equal1.IN6
seg_data_0[2] => input_data.DATAA
seg_data_0[2] => Equal1.IN5
seg_data_0[3] => input_data.DATAA
seg_data_0[3] => Equal1.IN4
seg_data_0[4] => input_data.DATAA
seg_data_0[4] => Equal1.IN3
seg_data_0[5] => input_data.DATAA
seg_data_0[5] => Equal1.IN2
seg_data_0[6] => input_data.DATAA
seg_data_0[6] => Equal1.IN1
seg_data_0[7] => input_data.DATAA
seg_data_0[7] => Equal1.IN0
seg_data_1[0] => input_data.DATAA
seg_data_1[0] => Equal2.IN7
seg_data_1[1] => input_data.DATAA
seg_data_1[1] => Equal2.IN6
seg_data_1[2] => input_data.DATAA
seg_data_1[2] => Equal2.IN5
seg_data_1[3] => input_data.DATAA
seg_data_1[3] => Equal2.IN4
seg_data_1[4] => input_data.DATAA
seg_data_1[4] => Equal2.IN3
seg_data_1[5] => input_data.DATAA
seg_data_1[5] => Equal2.IN2
seg_data_1[6] => input_data.DATAA
seg_data_1[6] => Equal2.IN1
seg_data_1[7] => input_data.DATAA
seg_data_1[7] => Equal2.IN0
seg_data_2[0] => input_data.DATAA
seg_data_2[0] => Equal3.IN7
seg_data_2[1] => input_data.DATAA
seg_data_2[1] => Equal3.IN6
seg_data_2[2] => input_data.DATAA
seg_data_2[2] => Equal3.IN5
seg_data_2[3] => input_data.DATAA
seg_data_2[3] => Equal3.IN4
seg_data_2[4] => input_data.DATAA
seg_data_2[4] => Equal3.IN3
seg_data_2[5] => input_data.DATAA
seg_data_2[5] => Equal3.IN2
seg_data_2[6] => input_data.DATAA
seg_data_2[6] => Equal3.IN1
seg_data_2[7] => input_data.DATAA
seg_data_2[7] => Equal3.IN0
seg_data_3[0] => input_data.DATAA
seg_data_3[0] => Equal4.IN7
seg_data_3[1] => input_data.DATAA
seg_data_3[1] => Equal4.IN6
seg_data_3[2] => input_data.DATAA
seg_data_3[2] => Equal4.IN5
seg_data_3[3] => input_data.DATAA
seg_data_3[3] => Equal4.IN4
seg_data_3[4] => input_data.DATAA
seg_data_3[4] => Equal4.IN3
seg_data_3[5] => input_data.DATAA
seg_data_3[5] => Equal4.IN2
seg_data_3[6] => input_data.DATAA
seg_data_3[6] => Equal4.IN1
seg_data_3[7] => input_data.DATAA
seg_data_3[7] => Equal4.IN0
seg_data_4[0] => input_data.DATAA
seg_data_4[0] => Equal5.IN7
seg_data_4[1] => input_data.DATAA
seg_data_4[1] => Equal5.IN6
seg_data_4[2] => input_data.DATAA
seg_data_4[2] => Equal5.IN5
seg_data_4[3] => input_data.DATAA
seg_data_4[3] => Equal5.IN4
seg_data_4[4] => input_data.DATAA
seg_data_4[4] => Equal5.IN3
seg_data_4[5] => input_data.DATAA
seg_data_4[5] => Equal5.IN2
seg_data_4[6] => input_data.DATAA
seg_data_4[6] => Equal5.IN1
seg_data_4[7] => input_data.DATAA
seg_data_4[7] => Equal5.IN0
seg_data_5[0] => input_data.DATAA
seg_data_5[0] => Equal6.IN7
seg_data_5[1] => input_data.DATAA
seg_data_5[1] => Equal6.IN6
seg_data_5[2] => input_data.DATAA
seg_data_5[2] => Equal6.IN5
seg_data_5[3] => input_data.DATAA
seg_data_5[3] => Equal6.IN4
seg_data_5[4] => input_data.DATAA
seg_data_5[4] => Equal6.IN3
seg_data_5[5] => input_data.DATAA
seg_data_5[5] => Equal6.IN2
seg_data_5[6] => input_data.DATAA
seg_data_5[6] => Equal6.IN1
seg_data_5[7] => input_data.DATAA
seg_data_5[7] => Equal6.IN0


